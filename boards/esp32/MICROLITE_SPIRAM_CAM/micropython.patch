diff --git a/ports/esp32/main.c b/ports/esp32/main.c
index c9b033d62..abf6931f5 100644
--- a/ports/esp32/main.c
+++ b/ports/esp32/main.c
@@ -97,6 +97,18 @@ void mp_task(void *pvParameter) {
     #endif
     machine_init();
 
+    #if MICROPY_ALLOCATE_HEAP_USING_MALLOC == 1
+    
+     // Allocate the uPy heap using malloc and get the largest available region
+     // reduce actual heap size by MICROPY_HEAP_SIZE_REDUCTION bytes.
+     //
+     // Typically used by esp32 camera boards or other idf components that need to be able to malloc
+     // memory for themselves.
+    size_t mp_task_heap_size = heap_caps_get_largest_free_block(MALLOC_CAP_8BIT) - MICROPY_HEAP_SIZE_REDUCTION;
+    void *mp_task_heap = malloc(mp_task_heap_size);
+
+    #else
+
     // TODO: CONFIG_SPIRAM_SUPPORT is for 3.3 compatibility, remove after move to 4.0.
     #if CONFIG_ESP32_SPIRAM_SUPPORT || CONFIG_SPIRAM_SUPPORT
     // Try to use the entire external SPIRAM directly for the heap
@@ -134,6 +146,8 @@ void mp_task(void *pvParameter) {
     void *mp_task_heap = malloc(mp_task_heap_size);
     #endif
 
+    #endif
+
 soft_reset:
     // initialise the stack pointer for the main thread
     mp_stack_set_top((void *)sp);
diff --git a/ports/esp32/mpconfigport.h b/ports/esp32/mpconfigport.h
index dc6bc2e53..10edde9cb 100644
--- a/ports/esp32/mpconfigport.h
+++ b/ports/esp32/mpconfigport.h
@@ -20,6 +20,22 @@
 // memory allocation policies
 #define MICROPY_ALLOC_PATH_MAX              (128)
 
+// standard is to use MMAP with SPRAM but
+// some boards integrating with esp-idf components
+// using the heap capabilities allocation methods
+// need the board setup to allocate spram using malloc.
+// This is normally used with MICROPY_HEAP_SIZE_REDUCTION to decrease
+// the SPRAM allocated to micropython
+#ifndef MICROPY_ALLOCATE_HEAP_USING_MALLOC
+#define MICROPY_ALLOCATE_HEAP_USING_MALLOC (0)
+#endif
+
+// Allows boards to reduce the size of the heap allocated to Micropython.
+// For example to leave space for the framebuffer when using esp32-camera
+#ifndef MICROPY_HEAP_SIZE_REDUCTION  
+#define MICROPY_HEAP_SIZE_REDUCTION (0)
+#endif
+
 // emitters
 #define MICROPY_PERSISTENT_CODE_LOAD        (1)
 #if !CONFIG_IDF_TARGET_ESP32C3
